buildscript 
{
    repositories 
    {
        jcenter()
        maven
        {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins 
{
    id "net.minecraftforge.gradle.forge" version "2.0.2"
    id "com.matthewprenger.cursegradle" version "1.0.8"
    id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.32"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

version = mc_version + '-' + version_major + '.' + version_minor + '.' + version_patch + '.' + version_build
group = "seia.vanillamagicaddon.VanillaMagicAddon" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "VanillaMagicAddon"

srcCompat = JavaVersion.VERSION_1_8
targetCompat = JavaVersion.VERSION_1_8

minecraft 
{
    version = mc_version + "-" + forge_version
    runDir = "run"
    mappings = mcp_mapping
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    replaceIn "VanillaMagicAddon.java"
    replace "@VERSION@", project.version
}

configurations 
{
    api
    compile.extendsFrom api
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) 
    {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) 
    {
        exclude 'mcmod.info'
        exclude '**/*.md'
    }
}

task sourcesJarCode(type: Jar) {
    from sourceSets.main.allSource
    include 'seia/vanillamagicaddon/**'
    classifier = 'sourcesCode'
}

task sourcesJarDeobf(type: Jar) {
    from zipTree('build/retromapping/retromappedReplacedMain.jar')
    classifier = 'sourcesDeobf'
}

task apiJar(type: Jar) {
    from sourceSets.main.allSource
    from sourceSets.main.output
    include 'seia/vanillamagicaddon/api/**'
    classifier = 'api'
}

artifacts {
    archives sourcesJarCode
    archives sourcesJarDeobf
    archives apiJar
}

curseforge 
{
    project 
    {
        id = curse_project_id
        changelog = file('changelog.txt')
        releaseType = release_type
    }
}
